---
  - name: Set default for 3.11+ compatibility flag
    set_fact: is_311_plus=false

  - name: Set compatibility flag for 3.11+
    when: not("v3.6" in origin_image_tag) and
          not("v3.7" in origin_image_tag) and
          not("v3.9" in origin_image_tag) and
          not("v3.10" in origin_image_tag)
    set_fact: is_311_plus=true

  - name: "Clone Operator Lifecycle Manager (OLM) project"
    git:
      depth: 1
      repo: "{{ olm_repo }}"
      dest: "{{ olm_repo_dest }}"

  - name: Deploy Operator Lifecycle Manager (OLM)
    shell: "{{ oc_cmd }} create -f {{ olm_repo_dest }}/deploy/{{olm_manifest_type}}/manifests/{{ olm_version }}"

  - name: Enable OSB catalog
    when: olm_enable_osb_catalog
    block:
      - name: Create tmp directory for OSB catalog templates
        tempfile:
          state: directory
        register: _osb_cat_tmp
      - debug:
          msg: "{{ _osb_cat_tmp }}"
      - name: Render OSB catalog templates
        template:
          src: "{{ item }}"
          dest: "{{ _osb_cat_tmp.path }}/{{ item }}"
        with_items:
          - osb-operators.catalogsource.yaml
          - "osb-operators.configmap.{{ olm_asb_branding }}.yaml"
      - name: Install OSB catalog
        shell: "{{ oc_cmd }} create -f {{ _osb_cat_tmp.path }}"


  - name: Deploy OpenShift Admin Console for interacting with OLM on 3.11+
    when: deploy_admin_console == true and is_311_plus == true
    block:
    - name: Create admin-console namespace
      shell: "{{ oc_cmd }} new-project admin-console"

    - name: Create admin-console-sa service account
      shell: "{{ oc_cmd }} create serviceaccount admin-console-sa -n admin-console"

    - name: Assign cluster-admin role to admin-console-sa
      shell: "{{ oc_cmd }} create clusterrolebinding admin-console-sa --clusterrole=cluster-admin --serviceaccount=admin-console:admin-console-sa"

    - name: Create deployment of OpenShift Admin Console from {{ admin_console_image }}
      shell: "{{ oc_cmd }} new-app --docker-image {{ admin_console_image }} --name=origin-console -n admin-console"

    - name: Patch origin-console deployment config to use admin-console-sa service account
      shell: "{{ oc_cmd }} patch dc origin-console --patch '{\"spec\":{\"template\":{\"spec\":{\"serviceAccountName\": \"admin-console-sa\"}}}}' -n admin-console"

    - name: Create admin-console service
      shell: "{{ oc_cmd }} expose dc origin-console --port 9000 -n admin-console"

    - name: Create admin-console route
      shell: "{{ oc_cmd }} expose svc origin-console -n admin-console"

    - name: Record URL endpoint for origin-console route
      shell: "{{ oc_cmd }} get route origin-console --template=\"{{'{{'}}.spec.host{{'}}'}}\""
      register: result

    - set_fact: admin_console_url="{{ result.stdout }}"
